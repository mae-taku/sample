# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      
      - run:
          name: "Install Test Prerequisites"
          command: |
            sudo apt-get update && \
            sudo apt-get install -y mysql-client
      - run:
          name: "Test Docker Images"
          shell: /bin/bash -o pipefail
          command: |
            ssh -f -N -L localhost:3306:localhost:3306 remote-docker
            IMAGES=$(docker images --format='{{.Repository}}:{{.Tag}}' | grep "cimg/mysql")
            for IMAGE in $IMAGES; do
              printf "Booting $IMAGE...\n"
              CONTAINER_ID=$(docker run --rm --env MYSQL_USER=user --env MYSQL_PASSWORD=passw0rd -p 3306:3306 -d $IMAGE)
              for i in {1..20}; do
                printf "[$i/20] Checking MySQL is up...\n"
                mysqladmin ping -h 127.0.0.1 --silent
                if [ $? -eq 0 ]; then
                  printf "Booted $IMAGE!\n"
                  break
                elif [ $? -ne 0 ] && [ $i -eq 20 ]; then
                  printf "Failed to boot image\n"
                  exit 1
                fi
                printf "[$i/20] No response. Sleeping 10s...\n"
                sleep 10s
              done
              printf "Running Version Check...\n"
              VERSION=$(echo $IMAGE | cut -d ":" -f2 | cut -d "-" -f1)
              if mysql -h 127.0.0.1 -u user -ppassw0rd --execute="SELECT VERSION();" | grep $VERSION ; then
                printf "Version matches!\n"
              else
                printf "Version mismatch!\n"
                exit 1
              fi
              printf "Stopping $IMAGE...\n"
              docker stop $CONTAINER_ID >/dev/null 2>&1
            done
            printf "All images passed!\n"
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
